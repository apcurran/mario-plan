{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","utility/dateFormatter.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","console","error","props","className","to","onClick","href","profile","initials","SignedOutLinks","state","log","firebase","links","uid","isLoaded","formatDate","newDate","Intl","DateTimeFormat","weekday","year","month","day","format","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toDate","ProjectList","projects","map","id","key","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","ownProps","match","params","data","doc","content","SignIn","email","password","handleSubmit","event","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","name","creds","credentials","signInWithEmailAndPassword","response","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","user","set","CreateProject","createProject","history","push","authorId","add","Date","App","path","exact","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d105a6ea.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nfunction SignedInLinks(props) {\n\n    return (\n        <ul className=\"right\">\n            <li>\n                <NavLink to=\"/create\">New Project</NavLink>\n            </li>\n            <li>\n                <a onClick={props.signOut} href=\"#\">Log Out</a>\n            </li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(\n                credentials.email,\n                credentials.password\n            )\n            .then(response => {\n                dispatch({ type: \"LOGIN_SUCCESS\" });\n            })\n            .catch(err => {\n                dispatch({ type: \"LOGIN_ERROR\", err });\n            });\n    };\n};\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase\n            .auth()\n            .signOut()\n            .then(() => {\n                dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    };\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(\n                newUser.email,\n                newUser.password\n            )\n            .then(response => {\n                return firestore.collection(\"users\").doc(response.user.uid).set({\n                   firstName: newUser.firstName,\n                   lastName: newUser.lastName,\n                   initials: newUser.firstName[0] + newUser.lastName[0] \n                });\n            })\n            .then(() => {\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\n            })\n            .catch(err => {\n                dispatch({ type: \"SIGNUP_ERROR\", err });\n            })\n    };\n};","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nexport default function SignedOutLinks() {\n    return (\n        <ul className=\"right\">\n            <li>\n                <NavLink to=\"/signup\">Sign Up</NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/signin\">Log In</NavLink>\n            </li>\n        </ul>\n    );\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nfunction Navbar({ auth, profile }) {\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">Mario Plan</Link>\n                {auth.isLoaded ? links : null}\n            </div>\n        </nav>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    };\n};\n\nexport default connect(mapStateToProps)(Navbar);","// Date formatting helper\nfunction formatDate(newDate) {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    return new Intl.DateTimeFormat('en-US', options).format(newDate);\n}\n\nexport default formatDate;","import React from 'react';\n\nimport formatDate from \"../../utility/dateFormatter\";\n\nexport default function ProjectSummary({ project }) {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{formatDate(project.createdAt.toDate())}</p>\n            </div>\n        </div>\n    );\n}\n\n\n","import React from 'react';\n\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ProjectList({ projects }) {\n    return (\n        <div className=\"project-list section\">\n            {projects ? (\n                projects.map(project => {\n                    return (\n                        <Link to={`/project/${project.id}`} key={project.id}>\n                            <ProjectSummary project={project} />\n                        </Link>\n                    );\n                })\n            ) : null}\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport ProjectList from \"../projects/ProjectList\";\n\nclass Dashboard extends Component {\n    render() {\n        // console.log(this.props);\n        const { projects, auth } = this.props;\n\n        if (!auth.uid) {\n            return <Redirect to=\"/signin\" />;\n        }\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth\n    };\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] }\n    ])\n)(Dashboard);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport formatDate from \"../../utility/dateFormatter\";\n\nfunction ProjectDetails(props) {\n    const { project, auth } = props;\n\n    if (!auth.uid) {\n        return <Redirect to=\"/signin\" />;\n    }\n\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <h3>Posted by {project.authorFirstName} {project.authorLastName}</h3>\n                        <p>{formatDate(project.createdAt.toDate())}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n\n    return {\n        project,\n        auth: state.firebase.auth\n    };\n}\n\nexport default compose(\n   connect(mapStateToProps),\n   firestoreConnect(props => [\n       { collection: \"projects\", doc: props.match.params.id }\n   ])\n)(ProjectDetails);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.signIn(this.state);\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            // Target input by id (either password or email)\n            [event.target.id]: event.target.value\n        });\n    };\n\n    render() {\n        const { authError, auth } = this.props;\n\n        if (auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input onChange={this.handleChange} type=\"email\" name=\"email\" id=\"email\"/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input onChange={this.handleChange} type=\"password\" name=\"password\" id=\"password\"/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n        <p className=\"red-text center\">{authError ? authError : null}</p>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.signUp(this.state);\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            // Target input by id (either password or email)\n            [event.target.id]: event.target.value\n        });\n    };\n\n    render() {\n        const { auth, authError } = this.props;\n\n        if (auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input onChange={this.handleChange} type=\"text\" name=\"firstName\" id=\"firstName\"/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input onChange={this.handleChange} type=\"text\" name=\"lastName\" id=\"lastName\"/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input onChange={this.handleChange} type=\"email\" name=\"email\" id=\"email\"/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input onChange={this.handleChange} type=\"password\" name=\"password\" id=\"password\"/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <p className=\"red-text center\">\n                            {authError ? authError : null}\n                        </p>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { createProject } from \"../../store/actions/projectActions\";\n\nclass CreateProject extends Component {\n    state = {\n        title: \"\",\n        content: \"\",\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.createProject(this.state);\n        // Then, redirect to home page\n        this.props.history.push(\"/\");\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            // Target input by id\n            [event.target.id]: event.target.value\n        });\n    };\n\n    render() {\n        const { auth } = this.props;\n\n        if (!auth.uid) {\n            return <Redirect to=\"/signin\" />;\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input onChange={this.handleChange} type=\"text\" name=\"title\" id=\"title\"/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea onChange={this.handleChange} className=\"materialize-textarea\" name=\"content\" id=\"content\"></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // Make an async db call\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        \n        firestore\n            .collection(\"projects\")\n            .add({\n                ...project,\n                authorFirstName: profile.firstName,\n                authorLastName: profile.lastName,\n                authorId: authorId,\n                createdAt: new Date()\n            })\n            .then(() => {\n                dispatch({ type: \"CREATE_PROJECT\", project });\n            })\n            .catch(err => {\n                dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n            });\n    };\n};","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN_ERROR\":\n            console.log(\"Login error\");\n\n            return {\n                ...state,\n                authError: \"Login failed\"\n            };\n        case \"LOGIN_SUCCESS\":\n            console.log(\"Login success\");\n\n            return {\n                ...state,\n                authError: null\n            };\n        case \"SIGN_OUT_SUCCESS\":\n            console.log(\"Sign out success\");\n\n            return state;\n        case \"SIGNUP_SUCCESS\":\n            console.log(\"Signup success\");\n\n            return {\n                ...state,\n                authError: null\n            };\n        case \"SIGNUP_ERROR\":\n            console.log(\"Signup error\");\n\n            return {\n                ...state,\n                authError: action.err.message\n            };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","const initState = {\n    projects: [\n        { id: 1, title: \"Help me Find Peach\", content: \"Lorem ipsum\" },\n        { id: 2, title: \"Collect all the Stars\", content: \"Lorem ipsum\" },\n        { id: 3, title: \"Egg Hunt With Yoshi\", content: \"Lorem ipsum\" },\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"CREATE_PROJECT\":\n            console.log(\"Created project\", action.project);\n            return state;\n        case \"CREATE_PROJECT_ERROR\":\n            console.log(\"Create project error\", action.err);\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default projectReducer;","import { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n});\n\nexport default rootReducer;","  import firebase from \"firebase/app\";\n  import \"firebase/firestore\";\n  import \"firebase/auth\";\n  \n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBFgVqCaefkfoaII5hk9TRooDm3GSiu18g\",\n    authDomain: \"mario-plan-7131a.firebaseapp.com\",\n    databaseURL: \"https://mario-plan-7131a.firebaseio.com\",\n    projectId: \"mario-plan-7131a\",\n    storageBucket: \"mario-plan-7131a.appspot.com\",\n    messagingSenderId: \"459575668338\",\n    appId: \"1:459575668338:web:5165f12b297cbef2349ceb\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\n\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}